name: Main workflow

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/setup

      - name: Lint
        run: yarn nx run-many --target=lint --all --parallel

      - name: Build
        run: yarn nx run-many --target=build --all --parallel

      - name: Run Tests
        run: yarn nx run-many --target=test --all --coverage --coverageReporters=json --parallel

      - name: Run e2e Tests
        run: yarn nx run-many --target=e2e-ci --all --parallel

      - name: Sonar Scan
        run: |
          ./gradlew testReport
          ./gradlew integrationTestReport
          ./gradlew codeCoverageReport
          ./gradlew sonarqube

  build-image:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/setup

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build prod
        run: |
          yarn nx build sn-application
          yarn nx build social-network-frontend --prod

      - name: Login to docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Socivio API image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/sn-application/Dockerfile
          push: true
          tags: wizard2020abc/social-network-backend:0.0.1
          build-args: JARFILE=./apps/sn-application/build/libs/*.jar

      - name: Build and push Socivio UI image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/social-network-frontend/Dockerfile
          push: true
          tags: wizard2020abc/social-network-frontend:0.0.1

  deploy-dev:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: ['build-and-test', 'build-image']
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set k8s context
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: config set-context --current --namespace=argocd

      - name: Install argocd CLI
        uses: clowdhaus/argo-cd-action/@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: 2.7.3
          command: version

      - name: Deploy Socivio API
        uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.7.3
          command: app create socivio-api --upsert --sync-policy auto --self-heal --repo https://github.com/Wizard2069/social-network.git --path ./deploy/dev/socivio-api --dest-server https://kubernetes.default.svc --dest-namespace dev

      - name: Deploy Socivio UI
        uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.7.3
          command: app create socivio-ui --upsert --sync-policy auto --self-heal --repo https://github.com/Wizard2069/social-network.git --path ./deploy/dev/socivio-ui --dest-server https://kubernetes.default.svc --dest-namespace dev
