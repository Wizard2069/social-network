name: Main workflow

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/setup

      - name: Lint
        run: yarn nx run-many --target=lint --all --parallel

      - name: Build
        run: yarn nx run-many --target=build --all --parallel

      - name: Run Tests
        run: yarn nx run-many --target=test --all --coverage --coverageReporters=json --parallel

      - name: Run e2e Tests
        run: yarn nx run-many --target=e2e-ci --all --parallel

      - name: Sonar Scan
        run: |
          ./gradlew testReport
          ./gradlew integrationTestReport
          ./gradlew codeCoverageReport
          ./gradlew sonarqube

  build-image:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/setup

      - name: Build docker image
        uses: ./.github/build-image
        with:
          version: 0.0.1
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  deploy-dev:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy to argocd
        uses: ./.github/deploy-argocd
        with:
          repoUrl: https://github.com/Wizard2069/social-network.git
          environment: dev
          version: 0.0.1
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          server: ${{ secrets.ARGOCD_SERVER }}
          username: ${{ secrets.ARGOCD_USERNAME }}
          password: ${{ secrets.ARGOCD_PASSWORD }}
